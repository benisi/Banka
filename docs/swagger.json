{
  "swagger" : "2.0",
  "info" : {
    "description" : "Banka is a light weight bank application for performing simple banka service like credit, debit and account creation. \nApi on [http://benisi-banka.herokuapp.com](http://benisi-banka.herokuapp.com) \n",
    "version" : "1.0.0",
    "title" : "Banka",
    "contact" : {
      "email" : "oseikwemeisidahomen@gmail.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    }
  },
  "host" : "benisi-banka.herokuapp.com",
  "basePath" : "/api/v1",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about user"
  }, {
    "name" : "account",
    "description" : "Operations about bank account"
  }, {
    "name" : "transaction",
    "description" : "Operations about account transactions"
  } ],
  "schemes" : [ "https", "http" ],
  "security" : [ {
    "Authorization" : [ ]
  } ],
  "paths" : {
    "/auth/signup" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can be done by all users.",
        "operationId" : "createUser",
        "produces" : [ "application/json" ],
        "security": [],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 201,
                "data": [
                    {
                        "id": "8",
                        "firstName": "john",
                        "type": "client",
                        "stateOfResidence": "edo state",
                        "phoneNumber": "07035361889",
                        "sex": "male",
                        "dateOfBirth": "1960-09-01T23:00:00.000Z",
                        "isAdmin": false,
                        "lastName": "doe",
                        "email": "doe@yaohoo.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjgiLCJ0eXBlIjoiY2xpZW50IiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU1NjE4MDk1NywiZXhwIjoxNTU2MzUzNzU3fQ.Ui7wPob-4cFUVTjLuXVchms0wIE7bPGIAwI4MXV-6eY"
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "Last name field is required"
              }
            }
          },
          "409" : {
            "description" : "there is a conflict",
            "schema": {
              "type": "object",
              "example": {
                "status": 409,
                "error": "Email already exist"
              }
            }
          }
        }
      }
    },
    "/auth/admin/signup" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in admin.",
        "operationId" : "createAdminUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdminUser"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 201,
                "data": [
                    {
                        "id": "8",
                        "firstName": "john",
                        "type": "staff",
                        "stateOfResidence": "edo state",
                        "phoneNumber": "07035361889",
                        "sex": "male",
                        "dateOfBirth": "1960-09-01T23:00:00.000Z",
                        "isAdmin": false,
                        "lastName": "doe",
                        "email": "doe@yaohoo.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjgiLCJ0eXBlIjoiY2xpZW50IiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU1NjE4MDk1NywiZXhwIjoxNTU2MzUzNzU3fQ.Ui7wPob-4cFUVTjLuXVchms0wIE7bPGIAwI4MXV-6eY"
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "Last name field is required"
              }
            }
          },
          "409" : {
            "description" : "there is a conflict",
            "schema": {
              "type": "object",
              "example": {
                "status": 409,
                "error": "Email already exist"
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example": {
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example": {
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          }
        }
      }
    },
    "/auth/signin" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Login User",
        "security": [],
        "description" : "User can login using this endpoint.",
        "operationId" : "LoginUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Login user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Login"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 201,
                "data": [
                    {
                        "id": "8",
                        "firstName": "john",
                        "type": "client",
                        "stateOfResidence": "edo state",
                        "phoneNumber": "07035361889",
                        "sex": "male",
                        "dateOfBirth": "1960-09-01T23:00:00.000Z",
                        "isAdmin": false,
                        "lastName": "doe",
                        "email": "doe@yaohoo.com",
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjgiLCJ0eXBlIjoiY2xpZW50IiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU1NjE4MDk1NywiZXhwIjoxNTU2MzUzNzU3fQ.Ui7wPob-4cFUVTjLuXVchms0wIE7bPGIAwI4MXV-6eY"
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "Last name field is required"
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example": {
                "status": 401,
                "error": "Wrong email and password combination"
             }
            }
          }
        }
      }
    },
    "/accounts/{accountnumber}" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "view a specific bank account",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "getASpecificUserBankAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "accountnumber of user whose bank account we want to reteieve",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                  {
                    "createdOn": "2019-04-24T10:53:23.246Z",
                    "accountNumber": 1151201,
                    "ownerEmail": "admin@gmail.com",
                    "type": "savings",
                    "status": "active",
                    "balance": 327.8
                  }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example": {
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Account 887887 is not on our databas"
            }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "account" ],
        "summary" : "Delete bank account",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "The account number that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                  {
                    "status": 200,
                    "message": "Account 1151202 was successfully deleted"
                }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example": {
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Account 887887 is not on our databas"
            }
            }
          }
        }
      }
    },
    "/user/{email}/accounts" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "get all bank account",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "getAllUserBankAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "email of user whose bank account we want to reteieve",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                  {
                    "id": "1",
                    "type": "savings",
                    "accountNumber": 1151201,
                    "status": "active",
                    "balance": 300.1,
                    "category": "individual",
                    "createdOn": "2019-04-24T10:53:23.246Z",
                    "owner": 1
                },
                {
                    "id": "2",
                    "type": "savings",
                    "accountNumber": 1151202,
                    "status": "active",
                    "balance": 0.1,
                    "category": "individual",
                    "createdOn": "2019-04-25T08:52:16.414Z",
                    "owner": 1
                }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "Invalid email"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          }
        }
      }
    },
    "/accounts" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "view all bank account",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "getALLUserBankAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "should retrieve all bank account according to status",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                  {
                    "id": "1",
                    "type": "savings",
                    "accountNumber": 1151201,
                    "status": "active",
                    "balance": 300.1,
                    "category": "individual",
                    "createdOn": "2019-04-24T10:53:23.246Z",
                    "owner": 1
                },
                {
                    "id": "2",
                    "type": "savings",
                    "accountNumber": 1151202,
                    "status": "active",
                    "balance": 0.1,
                    "category": "individual",
                    "createdOn": "2019-04-25T08:52:16.414Z",
                    "owner": 1
                }
                ]
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example": {
                "status": 403,
                "error": "You are not Authorize to perform this operation"
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Create account",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateAccount"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 201,
                "data": [
                    {
                        "accountNumber": "1151202",
                        "firstName": "Benjamin",
                        "lastName": "Isidahomen",
                        "email": "admin@gmail.com",
                        "type": "savings",
                        "openingBalance": "0.10",
                        "status": "active",
                        "category": "individual"
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "category is a required field"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          }
        }
      }
    },
    "/account/{accountnumber}" : {
      "patch" : {
        "tags" : [ "account" ],
        "summary" : "change account status",
        "operationId" : "changeAccountStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "Change account status.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountStatus"
          }
        } ],
        "responses" : {
       
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                  {
                    "accountNumber": "1151202",
                    "status": "dormant"
                }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example":{
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          }
        }
      }
    },
    "/accounts/{accountnumber}/transactions" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "get all bank account transaction",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "getAllAccountTransaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "The account number that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
       
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                    {
                        "id": "4",
                        "type": "credit",
                        "createdOn": "2019-04-25T11:28:11.780Z",
                        "cashier": 1,
                        "accountNumber": 1151202,
                        "amount": 200,
                        "owner": 1,
                        "oldBalance": 0.1,
                        "newBalance": 200.1
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example":{
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Account 887887 is not on our databas"
            }
            }
          }
        }
      }
    },
    "/transactions/{accountnumber}/credit" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "credit bank account",
        "operationId" : "transactionCredit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "Credit account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountTransaction"
          }
        } ],
        "responses" : {
       
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                    {
                    "transactionId": "7",
                    "accountNumber": "1151202",
                    "amount": 100,
                    "cashier": 1,
                    "transactionType": "credit",
                    "oldBalance": 500,
                    "newBalance": 600
                  }
               ]
              }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example":{
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Account 887887 is not on our databas"
            }
            }
          }
        }
      }
    },
    "/transactions/{accountnumber}/debit" : {
      "post" : {
        "tags" : [ "transaction" ],
        "summary" : "debit bank account",
        "operationId" : "transactionDebit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountnumber",
          "in" : "path",
          "description" : "Credit account.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Created account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountTransaction"
          }
        } ],
        "responses" : {
       
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
              "data": [
                  {
                      "transactionId": "7",
                      "accountNumber": "1151202",
                      "amount": 172.3,
                      "cashier": 1,
                      "transactionType": "debit",
                      "oldBalance": 227.8,
                      "newBalance": 55.5
                  }
               ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "account number must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example":{
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Account 887887 is not on our databas"
            }
            }
          }
        }
      }
    },
    "/transactions/{transactionId}" : {
      "get" : {
        "tags" : [ "transaction" ],
        "summary" : "get a bank account transaction by id",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "getABankAccountTransaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "path",
          "description" : "The transaction id we need to retrieve",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
       
          "200" : {
            "description" : "successful operation",
            "schema": {
              "type": "object",
              "example": {
                "status": 200,
                "data": [
                    {
                        "transactionId": "3",
                        "createdOn": "2019-04-25T11:26:29.335Z",
                        "type": "debit",
                        "accountNumber": 1151201,
                        "amount": 172.3,
                        "oldBalance": 300.1,
                        "newBalance": 127.8
                    }
                ]
            }
            }
          },
          "400" : {
            "description" : "error, operation not successful",
            "schema": {
              "type": "object",
              "example": {
                "status": 400,
                "error": "Transaction id must be an integer"
            }
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "type": "object",
              "example":{
                "status": 401,
                "error": "Invalid token"
            }
            }
          },
          "403": {
            "description": "Authorization error",
            "schema": {
              "type": "object",
              "example":{
                "status": 403,
                "error": "You are not Authorize to perform this operation"
            }
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "example": {
                "status": 404,
                "error": "Transaction don't exist"
            }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "Authorization" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "stateOfResidence" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "dateOfBirth" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "sex" : {
          "type" : "string",
          "description" : "User sex, only allow male and female"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "AdminUser" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "stateOfResidence" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "dateOfBirth" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "sex" : {
          "type" : "string",
          "description" : "User sex, only allow male and female"
        },
        "isSuperAdmin" : {
          "type" : "boolean",
          "description" : "use to determine the type of admin"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "Login" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "CreateAccount" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Account"
      }
    },
    "AccountStatus" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "must either be activate or deactivate"
        }
      },
      "xml" : {
        "name" : "Account"
      }
    },
    "AccountTransaction" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "integer",
          "description" : "the amount you want to debit or credit"
        }
      },
      "xml" : {
        "name" : "Account"
      }
    }
  }
}